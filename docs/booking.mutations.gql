
#  To create booking and a customer in one go
mutation createBookingAndNewCustomer($data: BookingAndCustomerCreateInput!) {
  createBookingAndNewCustomer(data: $data) {
   id
    createdAt
    updatedAt
    checkIn
    checkOut
    paid
    room {
      id
      title
      description
      number
      type
      sleeps
      cost
    }
    customer {
      id
      name
      email
      phone
    }
  }
}

# example data for createBookingAndNewCustomer mutation
{
  "data": {
    "checkIn": "2024-03-17",
    "checkOut": "2024-03-18",
    "paid": true,
    "roomId": 1,
		"customerCreate": {
     	"email":"neumann@example.com",
      "name": "neumann",
      "phone":"123007"
    }
  }
}




# Create booking for exisitng customer, update roomId and customerId to match the room and customer id
mutation createBooking($data: BookingCreateInput!) {
  createBooking(data: $data) {
    id
    createdAt
    updatedAt
    checkIn
    checkOut
    paid
    room {
      id
      title
      description
      number
      type
      sleeps
      cost
    }
    customer {
      id
      name
      email
      phone
    }
  }
}

# example data for createBooking mutation
{
  "data": {
    "checkIn": "2024-03-16",
    "checkOut": "2024-03-17",
    "paid": true,
    "roomId": 1,
    "customerId": 1
  }
}



# toggle paid for an exisitng booking. update id and isPaid param to match booking
mutation togglePaidBooking {
  togglePaidBooking(id:1, isPaid:true) {
    id
    createdAt
    updatedAt
    checkIn
    checkOut
    paid
    room {
    	id
      title
      description
      number
      type
      sleeps
      cost
    }
    customer {
      id
      name
      email
      phone
    }
  }
}


# Delete booking, update id prameter to the booking id 
mutation deleteBooking{
  deleteBooking(id: 1){
     id
    createdAt
    updatedAt
    checkIn
    checkOut
    paid
    room {
    	id
      title
      description
      number
      type
      sleeps
      cost
    }
    customer {
      id
      name
      email
      phone
    }
  }
}
